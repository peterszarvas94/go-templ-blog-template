[
  {
    "id": 0,
    "title": "Introduction",
    "excerpt": "Lite yet powerful static side generator, using the power of go and templ",
    "content": "Goals\n\nWrite your templates in go templ\nWrite your content in markdown\nGenerate static HTML\nServe HTML with go\n\nDependencies\n\ngo 1.22.5\nair\ntempl\nmake\n\nCommands\nDeveloment mode\n\nmake templ: start templ file generation in watch mode\nmake dev: start dev server with hot reload\nhttp://localhost:7331\n\nSSR (Server Side Rendering) mode\n\nmake build: build go binary\nmake ssr: start server\n\nSSG (Static Site Generation) mode\n\nmake gen: generate static files\n\nYou can put these static files to any server. You can serve them with go as\nwell:\n\nmake ssg: start static file server\nhttp://localhost:8080\n\nThemes\nYou can add a new theme under themes/mytheme/ (replace mytheme with the name\nof the theme), whith the following structure:\nthemes\n└── mytheme\n    ├── static\n    └── templates\n\nPut static files like css, js, images etc. under themes/mytheme/static.\nPut templ components under themes/mytheme/templates.\nEvery theme should have the following templ components exported from the root\ndirectory of the theme, as you can see in the pages/page.go:\ntype (\n\tNotFoundPage func() templ.Component\n\tIndexPage    func(files []*pkg.FileData) templ.Component\n\tPostPage     func(post *pkg.FileData) templ.Component\n\tTagPage      func(tag string, files []*pkg.FileData) templ.Component\n\tCategoryPage func(category string, files []*pkg.FileData) templ.Component\n)\n\nSwitching themes\nWhen running the following command, the files from the theme folder gets copied\nover the appropriate directories:\nmake theme name=mytheme\n",
    "route": "/welcome"
  },
  {
    "id": 1,
    "title": "TODO",
    "excerpt": "Way to prod",
    "content": "P1\n\n category page\n upgrade tag page\n add github link somewhere\n add contact info and some about info\n documentations an tutorials\n\nP2\n\n multilanguage\n search: json or google?\n seo things on frontmatter\n error handling\n accessibility\n\nP3\n\n rss ??\n xml site map???\n\n",
    "route": "/todo"
  },
  {
    "id": 2,
    "title": "About me",
    "excerpt": "",
    "content": "Hi I am Péter, check out my other works:\n\nportfolio\ngithub\n\n",
    "route": "/author"
  }
]